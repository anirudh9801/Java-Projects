package com.java.statemanagement;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class SignupServlet
 */
public class SignupServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public SignupServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		response.getWriter().append("Served at: ").append(request.getContextPath());
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	    String pwd, retype;
	    pwd = request.getParameter("passCode");
	    retype = request.getParameter("retypePassCode");
	    PrintWriter out = response.getWriter();

	    if (pwd != null && retype != null && pwd.equals(retype)) {
	        Login login = new Login();
	        login.setUserName(request.getParameter("userName"));
	        login.setPassCode(pwd); // Store the password without retype
	        LoginDAO dao = new LoginDAOImpl();

	        try {
	            out.println(dao.createUser(login));
	        } catch (ClassNotFoundException | SQLException e) {
	            // Handle the exception properly
	            e.printStackTrace();
	            out.println("An error occurred while creating the user.");
	        }
	    } else {
	        out.println("Password and RetypePassword must be the same.");
	    }
	}
}